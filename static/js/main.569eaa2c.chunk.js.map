{"version":3,"sources":["components/navBar.jsx","data/menu.js","components/pagination.jsx","components/shoppingBasket.jsx","components/orderPage.jsx","components/sortOptions.jsx","components/menuItem.jsx","components/productGrid.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","this","props","items","textProperty","valueProperty","length","className","slice","map","item","activeCategory","onClick","onCategoryChange","style","cursor","userSelect","renderShoppingBasket","basket","itemsInBasket","Component","defaultProps","menuData","name","price","category","vegan","alcoholic","getMenu","newMenu","i","oldMenuItem","oldname","oldprice","categoryName","newMenuItem","_id","hash","push","getPreprocessedMenu","Pagination","state","Math","ceil","itemsCount","pageSize","renderPreviousButton","renderPageNumbers","renderNextButton","numPages","currentPage","_","range","num","href","onPageChange","disabled","ShoppingBasket","onLeaveBasket","width","renderBasketRow","fontWeight","display","justifyContent","getTotalCount","formatPriceWithCurrency","getTotalPrice","onOrder","center","getName","type","onRemoveFromBasket","count","onAddToBasket","getPrice","formatPrice","onDeleteProduct","menu","index","findIndex","round","toFixed","OrderPage","confirmOrder","handleOrder","setState","Fragment","onReturnToBasket","renderForm","renderOrderDetails","htmlFor","id","placeholder","renderRow","SortOptions","renderSortSelect","renderProductNumberSelect","renderVeganCheck","value","onChange","onVeganSort","onSort","onProductsPerPageChange","MenuItem","ProductGrid","renderMenuGrid","menuRows","getMenuRows","row","renderMenuRow","content","rowItems","emptyColumns","menuItemsPerRow","getCount","rowsPerPage","page","numberOfRows","startIndex","stopIndex","rowNumber","itm","shoppingBasket","filter","App","navigationBarItems","showFoodSelectPage","showShoppingBasket","showOrderPage","shoppingBasketNavigationItem","completeMenuNavigationItem","currentCategory","sortBy","default","AZ","ZA","lowHigh","highLow","handleMenuPageChange","pageNumber","handleCategoryChange","resetSortOptions","handleAddOneToBasket","newShoppingBasket","isInShoppingBasket","handleRemoveOneFromBasket","handleDeleteProduct","handleReturnToBasket","handleLeaveBasket","handleSorting","event","target","handleVeganSort","checked","handleProductsPerPageChange","rows","getFilteredMenu","sortMenu","sort","compareName","reverse","comparePrice","a","b","set","Set","has","add","getNavigationBarItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.569eaa2c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const { items, textProperty, valueProperty } = this.props;\r\n    if (items.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"ms-5\"></li>\r\n            {items.slice(0, items.length - 1).map((item) => (\r\n              <li className=\"nav-item ms-3\" key={item[valueProperty]}>\r\n                <div\r\n                  className={\r\n                    this.props.activeCategory === item\r\n                      ? \"nav-link active\"\r\n                      : \"nav-link\"\r\n                  }\r\n                  onClick={() => this.props.onCategoryChange(item)}\r\n                  style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n                >\r\n                  {item[textProperty]}\r\n                </div>\r\n              </li>\r\n            ))}\r\n            {this.renderShoppingBasket()}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n  renderShoppingBasket() {\r\n    const { items, textProperty } = this.props;\r\n    const basket = items[items.length - 1];\r\n    return (\r\n      <li className=\"nav-item\">\r\n        <div\r\n          className={\r\n            this.props.activeCategory === basket\r\n              ? \"nav-link active\"\r\n              : \"nav-link\"\r\n          }\r\n          onClick={() => this.props.onCategoryChange(basket)}\r\n          style={{ cursor: \"pointer\", userSelect: \"none\" }}\r\n        >\r\n          <i className=\"fa fa-cart-plus me-2\"></i>\r\n          {basket[textProperty]}\r\n          <span className=\"badge rounded-pill bg-primary ms-1\">\r\n            {this.props.itemsInBasket}\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nNavBar.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\nexport default NavBar;\r\n","import hash from \"object-hash\";\r\nconst menuData = [\r\n  {\r\n    name: \"Salami Pizza\",\r\n    price: 10.99,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Pineapple Pizza\",\r\n    price: 12.99,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Pizza Margherita\",\r\n    price: 7.99,\r\n    category: \"Pizza\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Mushroom Pizza\",\r\n    price: 8.49,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Spinach Pizza\",\r\n    price: 8.49,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Cheeseburger\",\r\n    price: 4.2,\r\n    category: \"Burger\",\r\n  },\r\n  {\r\n    name: \"Banana split\",\r\n    price: 3.49,\r\n    category: \"Desert\",\r\n  },\r\n  {\r\n    name: \"Strawberry cake\",\r\n    price: 2.99,\r\n    category: \"Desert\",\r\n  },\r\n  {\r\n    name: \"Chocolate cake\",\r\n    price: 2.99,\r\n    category: \"Desert\",\r\n  },\r\n  {\r\n    name: \"Macarons\",\r\n    price: 1.99,\r\n    category: \"Desert\",\r\n    vegan: true,\r\n  },\r\n\r\n  {\r\n    name: \"Chickenburger\",\r\n    price: 4.7,\r\n    category: \"Burger\",\r\n  },\r\n  {\r\n    name: \"Hamburger\",\r\n    price: 3.99,\r\n    category: \"Burger\",\r\n  },\r\n  {\r\n    name: \"Tuna Pizza\",\r\n    price: 8.49,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Ham Pizza\",\r\n    price: 9.49,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Calzone\",\r\n    price: 9.49,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Shrimp Pizza\",\r\n    price: 9.49,\r\n    category: \"Pizza\",\r\n  },\r\n  {\r\n    name: \"Broccoli Pizza\",\r\n    price: 9.49,\r\n    category: \"Pizza\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Bacon Burger\",\r\n    price: 4.99,\r\n    category: \"Burger\",\r\n  },\r\n  {\r\n    name: \"Tofu Burger\",\r\n    price: 5.5,\r\n    category: \"Burger\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Cola\",\r\n    price: 1.5,\r\n    category: \"Drinks\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Water\",\r\n    price: 0.8,\r\n    category: \"Drinks\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Beer\",\r\n    price: 1.8,\r\n    category: \"Drinks\",\r\n    vegan: true,\r\n    alcoholic: true,\r\n  },\r\n  {\r\n    name: \"Ice Tea\",\r\n    price: 1.5,\r\n    category: \"Drinks\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Lemonade\",\r\n    price: 1.5,\r\n    category: \"Drinks\",\r\n    vegan: true,\r\n    alcoholic: true,\r\n  },\r\n  {\r\n    name: \"Cheese Sticks\",\r\n    price: 2.3,\r\n    category: \"Fingerfood\",\r\n  },\r\n  {\r\n    name: \"Onion Rings\",\r\n    price: 2.8,\r\n    category: \"Fingerfood\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Apple Juice\",\r\n    price: 1.5,\r\n    category: \"Drinks\",\r\n    vegan: true,\r\n    alcoholic: true,\r\n  },\r\n  {\r\n    name: \"Salad\",\r\n    price: 2.0,\r\n    category: \"Salad\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Chicken Salad\",\r\n    price: 2.5,\r\n    category: \"Salad\",\r\n  },\r\n  {\r\n    name: \"Feta Salad\",\r\n    price: 2.5,\r\n    category: \"Salad\",\r\n  },\r\n  {\r\n    name: \"French Fries\",\r\n    price: 2.5,\r\n    category: \"Fingerfood\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Sweet Potatoe Fries\",\r\n    price: 3.5,\r\n    category: \"Fingerfood\",\r\n    vegan: true,\r\n  },\r\n  {\r\n    name: \"Chicken Wings\",\r\n    price: 3.5,\r\n    category: \"Fingerfood\",\r\n  },\r\n  {\r\n    name: \"Chili Cheese Nuggets\",\r\n    price: 3.0,\r\n    category: \"Fingerfood\",\r\n  },\r\n];\r\n\r\nfunction getPreprocessedMenu() {\r\n  let newMenu = [];\r\n  for (let i = 0; i < menuData.length; i++) {\r\n    const oldMenuItem = menuData[i];\r\n    let vegan = oldMenuItem.vegan ? true : false;\r\n    const {\r\n      name: oldname,\r\n      price: oldprice,\r\n      category: categoryName,\r\n    } = oldMenuItem;\r\n    const newMenuItem = {\r\n      _id: hash(oldname),\r\n      name: oldname,\r\n      price: oldprice,\r\n      category: { _id: hash(categoryName), name: categoryName },\r\n      vegan: vegan,\r\n    };\r\n    newMenu.push(newMenuItem);\r\n  }\r\n\r\n  return newMenu;\r\n}\r\nexport function getMenu() {\r\n  return getPreprocessedMenu();\r\n}\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nclass Pagination extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const numPages = Math.ceil(this.props.itemsCount / this.props.pageSize);\r\n    if (numPages < 2) {\r\n      return null;\r\n    }\r\n    return (\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\" style={{ cursor: \"pointer\" }}>\r\n          {this.renderPreviousButton()} {this.renderPageNumbers()}{\" \"}\r\n          {this.renderNextButton()}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n  renderPageNumbers() {\r\n    const numPages = Math.ceil(this.props.itemsCount / this.props.pageSize);\r\n    const { currentPage } = this.props;\r\n    const pageNumbers = _.range(1, numPages + 1);\r\n    return pageNumbers.map((num) => (\r\n      <li\r\n        className={num === currentPage ? \"page-item active\" : \"page-item\"}\r\n        key={num}\r\n      >\r\n        <span\r\n          className=\"page-link\"\r\n          href=\"#\"\r\n          onClick={() => this.props.onPageChange(num)}\r\n        >\r\n          {num}\r\n        </span>\r\n      </li>\r\n    ));\r\n  }\r\n  renderPreviousButton() {\r\n    const { currentPage } = this.props;\r\n    const disabled = currentPage === 1;\r\n    const cursor = disabled ? \"default\" : \"pointer\";\r\n\r\n    return (\r\n      <li\r\n        className={disabled ? \"page-item disabled\" : \"page-item\"}\r\n        style={{ cursor: cursor }}\r\n      >\r\n        <span\r\n          className=\"page-link\"\r\n          onClick={() => this.props.onPageChange(currentPage - 1)}\r\n          style={{ userSelect: \"none\" }}\r\n        >\r\n          Previous\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n  renderNextButton() {\r\n    const { currentPage } = this.props;\r\n    const numPages = Math.ceil(this.props.itemsCount / this.props.pageSize);\r\n    const disabled = currentPage === numPages;\r\n    const cursor = disabled ? \"default\" : \"pointer\";\r\n    return (\r\n      <li\r\n        className={disabled ? \"page-item disabled\" : \"page-item\"}\r\n        style={{ cursor: cursor }}\r\n      >\r\n        <span\r\n          className=\"page-link\"\r\n          onClick={() => this.props.onPageChange(currentPage + 1)}\r\n          style={{ userSelect: \"none\" }}\r\n        >\r\n          Next\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ShoppingBasket extends Component {\r\n  render() {\r\n    const { basket } = this.props;\r\n    if (basket.length === 0) {\r\n      return (\r\n        <div className=\"container mt-5\">\r\n          <span className=\"m-2\">Your shopping basket is empty</span>\r\n          <br />\r\n          <button\r\n            className=\"btn btn-success m-2\"\r\n            onClick={this.props.onLeaveBasket}\r\n          >\r\n            Back to food selection\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"container m-5\" style={{ width: \"60%\" }}>\r\n          {basket.map((item) => this.renderBasketRow(item))}\r\n          <div\r\n            className=\"row border\"\r\n            style={{\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            <div className=\"col col-lg-3\">Total</div>\r\n            <div className=\"col col-sm\"></div>\r\n            <div\r\n              className=\"col col-sm\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {this.getTotalCount()}\r\n            </div>\r\n            <div className=\"col col-sm\"></div>\r\n            <div className=\"col col-lg-3\">\r\n              {this.formatPriceWithCurrency(this.getTotalPrice())}\r\n            </div>\r\n            <div className=\"col col-lg-3\"></div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col col-lg-3\"></div>\r\n            <div className=\"col col-sm-3\"></div>\r\n            <div className=\"col col-lg-3\">\r\n              <button\r\n                onClick={this.props.onOrder}\r\n                className=\"btn btn-primary mt-3\"\r\n              >\r\n                Checkout\r\n              </button>\r\n            </div>\r\n            <div className=\"col col-lg-3\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderBasketRow(item) {\r\n    const center = { display: \"flex\", justifyContent: \"center\" };\r\n    return (\r\n      <div key={item._id} className=\"row border\">\r\n        <div className=\"col col-lg-3\">{this.getName(item._id)}</div>\r\n        <div className=\"col col-sm\" style={center}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => this.props.onRemoveFromBasket(item._id)}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"col col-sm\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {item.count}\r\n        </div>\r\n        <div className=\"col col-sm\" style={center}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success w-100\"\r\n            onClick={() => this.props.onAddToBasket(item._id)}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className=\"col col-lg-3\">\r\n          {this.formatPriceWithCurrency(this.getPrice(item._id) * item.count)} (\r\n          {this.formatPrice(this.getPrice(item._id))} each)\r\n        </div>\r\n        <div className=\"col col-lg-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => this.props.onDeleteProduct(item._id)}\r\n          >\r\n            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  getName(_id) {\r\n    const { menu } = this.props;\r\n    const index = menu.findIndex((item) => item._id === _id);\r\n    return menu[index].name;\r\n  }\r\n  getPrice(_id) {\r\n    const { menu } = this.props;\r\n    const index = menu.findIndex((item) => item._id === _id);\r\n    return menu[index].price;\r\n  }\r\n  formatPrice(price) {\r\n    return (Math.round(price * 100) / 100).toFixed(2);\r\n  }\r\n  formatPriceWithCurrency(price) {\r\n    return (Math.round(price * 100) / 100).toFixed(2) + \" €\";\r\n  }\r\n  getTotalPrice() {\r\n    const { basket } = this.props;\r\n    let price = 0;\r\n    for (let i = 0; i < basket.length; i++) {\r\n      price += this.getPrice(basket[i]._id) * basket[i].count;\r\n    }\r\n    return price;\r\n  }\r\n  getTotalCount() {\r\n    const { basket } = this.props;\r\n    let count = 0;\r\n    for (let i = 0; i < basket.length; i++) {\r\n      count += basket[i].count;\r\n    }\r\n    return count;\r\n  }\r\n}\r\nexport default ShoppingBasket;\r\n","import React, { Component } from \"react\";\r\n\r\nclass OrderPage extends Component {\r\n  state = { confirmOrder: false };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={this.props.onReturnToBasket}\r\n          >\r\n            Back to shopping basket\r\n          </button>\r\n          <div className=\"row\">\r\n            <div className=\"col\">{this.renderForm()}</div>\r\n            <div className=\"col ms-5\">{this.renderOrderDetails()}</div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <div className=\"w-100\">\r\n        <form className=\"form-inline\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <label htmlFor=\"firstNameInput\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"firstNameInput\"\r\n              ></input>\r\n            </div>\r\n            <div className=\"col\">\r\n              <label htmlFor=\"lastNameInput\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"lastNameInput\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"streetInput\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"streetInput\"\r\n              placeholder=\"Street name, house number\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"postcodeInput\">Postcode</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"postcodeInput\"\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"emailInput\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"emailInput\"\r\n              placeholder=\"name@example.com\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phoneInput\">Phone</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"phoneInput\"></input>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  renderRow(item) {\r\n    return (\r\n      <tr key={item._id}>\r\n        <th className=\"col\">\r\n          {this.getName(item._id)} (x {item.count})\r\n        </th>\r\n        <th className=\"col\">\r\n          {this.formatPriceWithCurrency(this.getPrice(item._id) * item.count)}\r\n        </th>\r\n      </tr>\r\n    );\r\n  }\r\n  renderOrderDetails() {\r\n    return (\r\n      <React.Fragment>\r\n        <table className=\"table w-75\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"col\">Product</th>\r\n              <th className=\"col\">Subtotal</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.props.basket.map((item) => this.renderRow(item))}</tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th className=\"col\">Total</th>\r\n              <th className=\"col\">\r\n                {this.formatPriceWithCurrency(this.getTotalPrice())}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n        <div className=\"mx-auto w-50\">\r\n          <button onClick={this.handleOrder} className=\"btn btn-primary\">\r\n            Confirm Order (End of Demo)\r\n          </button>\r\n        </div>\r\n        <span className={this.state.confirmOrder ? \"visible\" : \"invisible\"}>\r\n          Thank you for testing this demo!\r\n        </span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  getName(_id) {\r\n    const { menu } = this.props;\r\n    const index = menu.findIndex((item) => item._id === _id);\r\n    return menu[index].name;\r\n  }\r\n  getPrice(_id) {\r\n    const { menu } = this.props;\r\n    const index = menu.findIndex((item) => item._id === _id);\r\n    return menu[index].price;\r\n  }\r\n  formatPrice(price) {\r\n    return (Math.round(price * 100) / 100).toFixed(2);\r\n  }\r\n  formatPriceWithCurrency(price) {\r\n    return (Math.round(price * 100) / 100).toFixed(2) + \" €\";\r\n  }\r\n  getTotalPrice() {\r\n    const { basket } = this.props;\r\n    let price = 0;\r\n    for (let i = 0; i < basket.length; i++) {\r\n      price += this.getPrice(basket[i]._id) * basket[i].count;\r\n    }\r\n    return price;\r\n  }\r\n  handleOrder = () => {\r\n    this.setState({ confirmOrder: true });\r\n  };\r\n}\r\n\r\nexport default OrderPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SortOptions extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">{this.renderSortSelect()}</div>\r\n          <div className=\"col-2\">{this.renderProductNumberSelect()}</div>\r\n          <div className=\"col\">{this.renderVeganCheck()}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderVeganCheck() {\r\n    return (\r\n      <div className=\"form-check mt-4\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          value=\"\"\r\n          onChange={this.props.onVeganSort}\r\n        />\r\n        <label className=\"form-check-label\">Vegan only</label>\r\n      </div>\r\n    );\r\n  }\r\n  renderSortSelect() {\r\n    return (\r\n      <React.Fragment>\r\n        Sort by:\r\n        <select\r\n          className=\"form-select\"\r\n          aria-label=\"Sort by\"\r\n          onChange={this.props.onSort}\r\n        >\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"AZ\">Alphabetical A -&gt; Z</option>\r\n          <option value=\"ZA\">Alphabetical Z -&gt; A</option>\r\n          <option value=\"lowHigh\">Price Low -&gt; High</option>\r\n          <option value=\"highLow\">Price High -&gt; Low</option>\r\n        </select>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderProductNumberSelect() {\r\n    return (\r\n      <React.Fragment>\r\n        Products per page:\r\n        <select\r\n          className=\"form-select\"\r\n          aria-label=\"Products per page\"\r\n          onChange={this.props.onProductsPerPageChange}\r\n        >\r\n          <option value=\"9PerPage\">9</option>\r\n          <option value=\"12PerPage\">12</option>\r\n          <option value=\"15PerPage\">15</option>\r\n          <option value=\"allPerPage\">All</option>\r\n        </select>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortOptions;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MenuItem extends Component {\r\n  state = {};\r\n  render() {\r\n    const { name, price, _id } = this.props.item;\r\n    const { count } = this.props;\r\n    return (\r\n      <div className=\"w-100\">\r\n        <div>{name}</div>\r\n        <div>Price: {price} €</div>\r\n\r\n        {count === 0 && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-dark\"\r\n            onClick={() => this.props.onAddToBasket(_id)}\r\n          >\r\n            Add to basket <i className=\"fa fa-cart-plus\"></i>\r\n          </button>\r\n        )}\r\n        {count !== 0 && (\r\n          <React.Fragment>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger me-2\"\r\n              onClick={() => this.props.onRemoveFromBasket(_id)}\r\n            >\r\n              -\r\n            </button>\r\n            {count}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success ms-2\"\r\n              onClick={() => this.props.onAddToBasket(_id)}\r\n            >\r\n              +\r\n            </button>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuItem;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport MenuItem from \"./menuItem\";\r\nclass ProductGrid extends Component {\r\n  state = {};\r\n  render() {\r\n    let menu = this.props.menu;\r\n    return <div className=\"mt-3\">{this.renderMenuGrid(menu)}</div>;\r\n  }\r\n\r\n  renderMenuGrid(menu) {\r\n    const menuRows = this.getMenuRows(menu);\r\n    return (\r\n      <div className=\"container\">\r\n        {menuRows.map((row) => (\r\n          <div className=\"row\" key={row._id}>\r\n            {this.renderMenuRow(row.content)}{\" \"}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderMenuRow(rowItems) {\r\n    const emptyColumns = rowItems.length - this.props.menuItemsPerRow;\r\n    return (\r\n      <React.Fragment>\r\n        {rowItems.map((item) => (\r\n          <div className=\"col\" key={item._id}>\r\n            {\r\n              <MenuItem\r\n                item={item}\r\n                count={this.getCount(item._id)}\r\n                onAddToBasket={this.props.onAddToBasket}\r\n                onRemoveFromBasket={this.props.onRemoveFromBasket}\r\n              />\r\n            }\r\n          </div>\r\n        ))}\r\n        {_.range(emptyColumns).map((num) => (\r\n          <div className=\"col\" key={num}></div>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getMenuRows(menu) {\r\n    const { menuItemsPerRow, rowsPerPage, page } = this.props;\r\n    let numberOfRows = Math.ceil(menu.length / menuItemsPerRow);\r\n    if (numberOfRows > rowsPerPage) {\r\n      numberOfRows = rowsPerPage;\r\n    }\r\n    const startIndex = (page - 1) * rowsPerPage;\r\n    const stopIndex = page * rowsPerPage;\r\n    const rowNumbers = _.range(startIndex, stopIndex);\r\n    return rowNumbers.map((rowNumber) => {\r\n      return {\r\n        _id: rowNumber,\r\n        content: menu.slice(\r\n          rowNumber * menuItemsPerRow,\r\n          (rowNumber + 1) * menuItemsPerRow\r\n        ),\r\n      };\r\n    });\r\n  }\r\n\r\n  getCount(id) {\r\n    const { shoppingBasket } = this.props;\r\n    let itm = shoppingBasket.filter((item) => item._id === id);\r\n    if (itm.length === 0) {\r\n      return 0;\r\n    }\r\n    return itm[0].count;\r\n  }\r\n}\r\n\r\nexport default ProductGrid;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navBar\";\nimport { getMenu } from \"./data/menu\";\nimport hash from \"object-hash\";\nimport Pagination from \"./components/pagination\";\nimport ShoppingBasket from \"./components/shoppingBasket\";\nimport OrderPage from \"./components/orderPage\";\nimport SortOptions from \"./components/sortOptions\";\nimport ProductGrid from \"./components/productGrid\";\n\nclass App extends Component {\n  state = {\n    menu: [],\n    shoppingBasket: [],\n    menuItemsPerRow: 3,\n    rowsPerPage: 3,\n    page: 1,\n    navigationBarItems: [],\n    showFoodSelectPage: true,\n    showShoppingBasket: false,\n    showOrderPage: false,\n    shoppingBasketNavigationItem: {\n      _id: hash(\"Shopping Basket\"),\n      name: \"Shopping Basket\",\n    },\n    completeMenuNavigationItem: {\n      _id: hash(\"All\"),\n      name: \"All\",\n    },\n    currentCategory: null,\n    sortBy: {\n      default: true,\n      AZ: false,\n      ZA: false,\n      lowHigh: false,\n      highLow: false,\n      vegan: false,\n    },\n  };\n\n  render() {\n    let menu = this.getFilteredMenu();\n    menu = this.sortMenu(menu);\n    const {\n      showShoppingBasket,\n      showFoodSelectPage,\n      showOrderPage,\n      menuItemsPerRow,\n      rowsPerPage,\n      page,\n      shoppingBasket,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar\n          items={this.state.navigationBarItems}\n          onCategoryChange={this.handleCategoryChange}\n          activeCategory={this.state.currentCategory}\n          itemsInBasket={this.state.shoppingBasket.length}\n        />\n        {showFoodSelectPage && (\n          <div>\n            <SortOptions\n              onSort={this.handleSorting}\n              onVeganSort={this.handleVeganSort}\n              onProductsPerPageChange={this.handleProductsPerPageChange}\n            />\n            <ProductGrid\n              menu={menu}\n              menuItemsPerRow={menuItemsPerRow}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onAddToBasket={this.handleAddOneToBasket}\n              onRemoveFromBasket={this.handleRemoveOneFromBasket}\n              shoppingBasket={shoppingBasket}\n            />\n            <div className=\"container mt-3\">\n              <Pagination\n                itemsCount={menu.length}\n                pageSize={this.state.menuItemsPerRow * this.state.rowsPerPage}\n                currentPage={this.state.page}\n                onPageChange={this.handleMenuPageChange}\n              />\n            </div>\n          </div>\n        )}\n        {showShoppingBasket && (\n          <React.Fragment>\n            <ShoppingBasket\n              menu={this.state.menu}\n              basket={this.state.shoppingBasket}\n              onAddToBasket={this.handleAddOneToBasket}\n              onRemoveFromBasket={this.handleRemoveOneFromBasket}\n              onDeleteProduct={this.handleDeleteProduct}\n              onLeaveBasket={this.handleLeaveBasket}\n              onOrder={this.handleOrder}\n            />\n            {this.state.shoppingBasket.length > 0 && (\n              <div className=\"mx-auto w-50\"></div>\n            )}\n          </React.Fragment>\n        )}\n        {showOrderPage && (\n          <OrderPage\n            menu={this.state.menu}\n            basket={this.state.shoppingBasket}\n            onReturnToBasket={this.handleReturnToBasket}\n          ></OrderPage>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  getFilteredMenu() {\n    let menu = [...this.state.menu];\n    if (menu.length === 0) {\n      return menu;\n    }\n    if (this.state.sortBy.vegan) {\n      menu = this.state.menu.filter((item) => item.vegan);\n    }\n    if (\n      this.state.currentCategory._id !==\n      this.state.completeMenuNavigationItem._id\n    ) {\n      menu = menu.filter(\n        (item) => this.state.currentCategory._id === item.category._id\n      );\n    }\n\n    return menu;\n  }\n\n  sortMenu(menu) {\n    const { sortBy } = this.state;\n    if (sortBy.AZ) {\n      menu = menu.sort(this.compareName);\n    }\n    if (sortBy.ZA) {\n      menu = menu.sort(this.compareName);\n      menu = menu.reverse();\n    }\n    if (sortBy.lowHigh) {\n      menu = menu.sort(this.comparePrice);\n    }\n    if (sortBy.highLow) {\n      menu = menu.sort(this.comparePrice);\n      menu = menu.reverse();\n    }\n    return menu;\n  }\n\n  compareName(a, b) {\n    if (a.name < b.name) {\n      return -1;\n    }\n    if (a.name > b.name) {\n      return 1;\n    }\n    return 0;\n  }\n\n  comparePrice(a, b) {\n    if (a.price < b.price) {\n      return -1;\n    }\n    if (a.price > b.price) {\n      return 1;\n    }\n    return 0;\n  }\n\n  getNavigationBarItems(menu) {\n    let set = new Set();\n    let items = [];\n    for (let i = 0; i < menu.length; i++) {\n      if (!set.has(menu[i].category._id)) {\n        set.add(menu[i].category._id);\n        items.push(menu[i].category);\n      }\n    }\n    items = [\n      this.state.completeMenuNavigationItem,\n      ...items,\n      this.state.shoppingBasketNavigationItem,\n    ];\n    return items;\n  }\n\n  componentDidMount() {\n    const newMenu = getMenu();\n    this.setState({\n      menu: newMenu,\n      navigationBarItems: this.getNavigationBarItems(newMenu),\n      currentCategory: this.state.completeMenuNavigationItem,\n    });\n  }\n\n  resetSortOptions() {\n    this.setState({\n      sortBy: {\n        default: true,\n        AZ: false,\n        ZA: false,\n        lowHigh: false,\n        highLow: false,\n        vegan: false,\n      },\n      rowsPerPage: 3,\n    });\n  }\n\n  handleMenuPageChange = (pageNumber) => {\n    this.setState({ page: pageNumber });\n  };\n\n  handleCategoryChange = (category) => {\n    let showShoppingBasket = false;\n    let showFoodSelectPage = true;\n    let showOrderPage = false;\n    if (category._id === this.state.shoppingBasketNavigationItem._id) {\n      showShoppingBasket = true;\n      showFoodSelectPage = false;\n    }\n    let { page, currentCategory } = this.state;\n    if (currentCategory._id !== category._id) {\n      page = 1;\n    }\n    if (currentCategory._id === this.state.shoppingBasketNavigationItem._id) {\n      this.resetSortOptions();\n    }\n    this.setState({\n      showShoppingBasket,\n      showFoodSelectPage,\n      showOrderPage,\n      currentCategory: category,\n      page,\n    });\n  };\n\n  handleAddOneToBasket = (_id) => {\n    const { shoppingBasket } = this.state;\n    let newShoppingBasket = [...shoppingBasket];\n    if (!this.isInShoppingBasket(_id)) {\n      newShoppingBasket.push({ _id: _id, count: 1 });\n    } else {\n      const index = shoppingBasket.findIndex((item) => item._id === _id);\n      newShoppingBasket[index].count++;\n    }\n    this.setState({ shoppingBasket: newShoppingBasket });\n  };\n\n  handleRemoveOneFromBasket = (_id) => {\n    const { shoppingBasket } = this.state;\n    if (!this.isInShoppingBasket(_id)) {\n      return;\n    }\n    const index = shoppingBasket.findIndex((item) => item._id === _id);\n    if (shoppingBasket[index].count === 1) {\n      this.handleDeleteProduct(_id);\n    } else {\n      shoppingBasket[index].count--;\n      this.setState({ shoppingBasket });\n    }\n  };\n\n  handleOrder = () => {\n    this.setState({\n      showFoodSelectPage: false,\n      showShoppingBasket: false,\n      showOrderPage: true,\n    });\n  };\n\n  isInShoppingBasket(_id) {\n    const { shoppingBasket } = this.state;\n    const item = shoppingBasket.filter((item) => item._id === _id);\n    return item.length === 1;\n  }\n\n  handleDeleteProduct = (_id) => {\n    let { shoppingBasket } = this.state;\n    shoppingBasket = shoppingBasket.filter((item) => item._id !== _id);\n    this.setState({ shoppingBasket });\n  };\n\n  handleReturnToBasket = () => {\n    this.handleCategoryChange(this.state.shoppingBasketNavigationItem);\n  };\n\n  handleLeaveBasket = () => {\n    this.handleCategoryChange(this.state.completeMenuNavigationItem);\n  };\n\n  handleSorting = (event) => {\n    const value = event.target.value;\n    const vegan = this.state.sortBy.vegan;\n    let sortBy = {\n      default: false,\n      AZ: false,\n      ZA: false,\n      lowHigh: false,\n      highLow: false,\n      vegan,\n    };\n    sortBy[value] = true;\n    if (value === \"default\") {\n      sortBy.default = true;\n    }\n    this.setState({ sortBy });\n  };\n\n  handleVeganSort = (event) => {\n    this.setState({ page: 1 });\n    let sortBy = this.state.sortBy;\n    sortBy.vegan = event.target.checked;\n    this.setState({ sortBy });\n  };\n\n  handleProductsPerPageChange = (event) => {\n    const value = event.target.value;\n    this.setState({ page: 1 });\n    if (value === \"9PerPage\") {\n      this.setState({ rowsPerPage: 3 });\n    }\n    if (value === \"12PerPage\") {\n      this.setState({ rowsPerPage: 4 });\n    }\n    if (value === \"15PerPage\") {\n      this.setState({ rowsPerPage: 5 });\n    }\n    if (value === \"allPerPage\") {\n      const rows = Math.ceil(\n        this.state.menu.length / this.state.menuItemsPerRow\n      );\n      this.setState({ rowsPerPage: rows });\n    }\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n//import \"font-awesome/css/font-awesome.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}